{"mappings":"ACwEA,SAAS,gBAAgB,CAAC,mBAAoB,MAC1C,AAxEJ,WACI,IAAM,EAAmB,SAAS,aAAa,CAAC,uBAC1C,EAAU,SAAS,aAAa,CAAC,aAEvC,GAAI,GAAoB,EAAS,CAC7B,IAAI,EAAc,CAAA,EAGlB,EAAiB,gBAAgB,CAAC,QAAS,AAAC,IACxC,EAAE,eAAe,GACb,IACJ,EAAc,CAAA,EAEd,EAAiB,SAAS,CAAC,MAAM,CAAC,UAClC,EAAQ,SAAS,CAAC,MAAM,CAAC,UAGzB,WAAW,KACP,EAAc,CAAA,CAClB,EAAG,KACP,GAGA,EAAQ,gBAAgB,CAAC,QAAS,AAAC,IAG/B,GAAI,AAAiC,MAAjC,AAFW,EAAE,MAAM,CAEZ,OAAO,CAAC,WAAW,GAAY,CACtC,GAAI,EAAa,OACjB,EAAc,CAAA,EAEd,EAAiB,SAAS,CAAC,MAAM,CAAC,UAClC,EAAQ,SAAS,CAAC,MAAM,CAAC,UAGzB,WAAW,KACP,EAAc,CAAA,CAClB,EAAG,IACP,CACA,EAAE,eAAe,EACrB,GAGA,SAAS,gBAAgB,CAAC,QAAS,AAAC,IAChC,GAAI,EAAQ,SAAS,CAAC,QAAQ,CAAC,UAAW,CACtC,IAAM,EAAS,EAAE,MAAM,CACvB,GAAI,CAAC,EAAiB,QAAQ,CAAC,IAAW,CAAC,EAAQ,QAAQ,CAAC,GAAS,CACjE,GAAI,EAAa,OACjB,EAAc,CAAA,EAEd,EAAiB,SAAS,CAAC,MAAM,CAAC,UAClC,EAAQ,SAAS,CAAC,MAAM,CAAC,UAGzB,WAAW,KACP,EAAc,CAAA,CAClB,EAAG,IACP,CACJ,CACJ,GAGA,OAAO,gBAAgB,CAAC,SAAU,KAC1B,OAAO,UAAU,CAAG,MACpB,EAAiB,SAAS,CAAC,MAAM,CAAC,UAClC,EAAQ,SAAS,CAAC,MAAM,CAAC,UAEjC,EACJ,CACJ,GAKA","sources":["<anon>","web_page/global.ts"],"sourcesContent":["(function () {\nvar $3755db63db9bd3b4$exports = {};\n// Mobile menu functionality\nfunction $3755db63db9bd3b4$var$initMobileMenu() {\n    const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');\n    const mainNav = document.querySelector('.main-nav');\n    if (mobileMenuToggle && mainNav) {\n        let isAnimating = false;\n        // Handle toggle button click\n        mobileMenuToggle.addEventListener('click', (e)=>{\n            e.stopPropagation(); // Prevent event from bubbling up\n            if (isAnimating) return;\n            isAnimating = true;\n            mobileMenuToggle.classList.toggle('active');\n            mainNav.classList.toggle('active');\n            // Reset animation flag after transition\n            setTimeout(()=>{\n                isAnimating = false;\n            }, 300); // Match the transition duration\n        });\n        // Handle clicks on menu items\n        mainNav.addEventListener('click', (e)=>{\n            const target = e.target;\n            // If clicking a menu item, close the menu\n            if (target.tagName.toLowerCase() === 'a') {\n                if (isAnimating) return;\n                isAnimating = true;\n                mobileMenuToggle.classList.remove('active');\n                mainNav.classList.remove('active');\n                // Reset animation flag after transition\n                setTimeout(()=>{\n                    isAnimating = false;\n                }, 300);\n            }\n            e.stopPropagation(); // Prevent closing when clicking inside menu\n        });\n        // Close menu when clicking outside\n        document.addEventListener('click', (e)=>{\n            if (mainNav.classList.contains('active')) {\n                const target = e.target;\n                if (!mobileMenuToggle.contains(target) && !mainNav.contains(target)) {\n                    if (isAnimating) return;\n                    isAnimating = true;\n                    mobileMenuToggle.classList.remove('active');\n                    mainNav.classList.remove('active');\n                    // Reset animation flag after transition\n                    setTimeout(()=>{\n                        isAnimating = false;\n                    }, 300);\n                }\n            }\n        });\n        // Close menu on window resize (in case user switches to desktop view)\n        window.addEventListener('resize', ()=>{\n            if (window.innerWidth > 768) {\n                mobileMenuToggle.classList.remove('active');\n                mainNav.classList.remove('active');\n            }\n        });\n    }\n}\n// Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    $3755db63db9bd3b4$var$initMobileMenu();\n});\n\n})();\n//# sourceMappingURL=dca_past.9ac70481.js.map\n","// Mobile menu functionality\nfunction initMobileMenu() {\n    const mobileMenuToggle = document.querySelector('.mobile-menu-toggle') as HTMLButtonElement;\n    const mainNav = document.querySelector('.main-nav') as HTMLElement;\n\n    if (mobileMenuToggle && mainNav) {\n        let isAnimating = false;\n\n        // Handle toggle button click\n        mobileMenuToggle.addEventListener('click', (e: Event) => {\n            e.stopPropagation(); // Prevent event from bubbling up\n            if (isAnimating) return;\n            isAnimating = true;\n\n            mobileMenuToggle.classList.toggle('active');\n            mainNav.classList.toggle('active');\n\n            // Reset animation flag after transition\n            setTimeout(() => {\n                isAnimating = false;\n            }, 300); // Match the transition duration\n        });\n\n        // Handle clicks on menu items\n        mainNav.addEventListener('click', (e: Event) => {\n            const target = e.target as HTMLElement;\n            // If clicking a menu item, close the menu\n            if (target.tagName.toLowerCase() === 'a') {\n                if (isAnimating) return;\n                isAnimating = true;\n\n                mobileMenuToggle.classList.remove('active');\n                mainNav.classList.remove('active');\n\n                // Reset animation flag after transition\n                setTimeout(() => {\n                    isAnimating = false;\n                }, 300);\n            }\n            e.stopPropagation(); // Prevent closing when clicking inside menu\n        });\n\n        // Close menu when clicking outside\n        document.addEventListener('click', (e: MouseEvent) => {\n            if (mainNav.classList.contains('active')) {\n                const target = e.target as Node;\n                if (!mobileMenuToggle.contains(target) && !mainNav.contains(target)) {\n                    if (isAnimating) return;\n                    isAnimating = true;\n\n                    mobileMenuToggle.classList.remove('active');\n                    mainNav.classList.remove('active');\n\n                    // Reset animation flag after transition\n                    setTimeout(() => {\n                        isAnimating = false;\n                    }, 300);\n                }\n            }\n        });\n\n        // Close menu on window resize (in case user switches to desktop view)\n        window.addEventListener('resize', () => {\n            if (window.innerWidth > 768) {\n                mobileMenuToggle.classList.remove('active');\n                mainNav.classList.remove('active');\n            }\n        });\n    }\n}\n\n// Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    initMobileMenu();\n});"],"names":["document","addEventListener","$3755db63db9bd3b4$var$initMobileMenu","mobileMenuToggle","querySelector","mainNav","isAnimating","e","stopPropagation","classList","toggle","setTimeout","target","tagName","toLowerCase","remove","contains","window","innerWidth"],"version":3,"file":"dca_past.9ac70481.js.map"}